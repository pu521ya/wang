<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.alibaba.com/schema/stat"
       xmlns:aop="http://www.springframework.org/schema/c" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                                 http://www.springframework.org/schema/context
                                 http://www.springframework.org/schema/context/spring-context-3.1.xsd
                                 http://www.springframework.org/schema/mvc
                                 http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd http://www.alibaba.com/schema/stat http://www.alibaba.com/schema/stat.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">



    <!--配置业务层类-->
    <context:component-scan base-package="com.qunar.fresh2018"/>
    <mvc:annotation-driven/>
    <!--配置数据库相关参数properties的属性:引入外部属性文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--配置DRUID连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--配置连接池属性-->
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!--连接池的私有属性-->
        <property name="maxActive" value="20"/>
        <property name="minIdle" value="1"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="maxWait" value="3000"/>
        <property name="validationQuery" value="select 1"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>

    </bean>
    <!--初始化数据库-->
    <jdbc:initialize-database data-source="dataSource" ignore-failures="DROPS">
        <jdbc:script location="classpath:db/creat.sql" encoding="utf-8"/>
    </jdbc:initialize-database>
    <!--配置sqlSessionFactory对象-->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置dataSource-->
        <property name="dataSource" ref="dataSource"/>
        <!--&lt;!&ndash;用来指定 MyBatis 的 XML 配置文件路径&ndash;&gt;
        <property name="configLocation" value="classpath:mybatis-config.xml"/>-->
        <!--扫描model包-->
        <property name="typeAliasesPackage" value="com.qunar.fresh2018.model"/>
        <!--用来指定 MyBatis 的 XML 映射器文件的位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
</bean>
    <!--查找类路径下的映射器并自动将它们创建成 MapperFactoryBean-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--扫描Dao接口包-->
        <property name="basePackage" value="com.qunar.fresh2018.dao"/>

    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <!--配置事务管理器( 创 建 一 个 DataSourceTransactionManager 对象)-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入DRUID连接池:可以获得具体的连接对象 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    &lt;!&ndash;开启注解事务&ndash;&gt;
    <tx:annotation-driven transaction-manager="txManager"/>-->

    <!--<context:component-scan base-package="com.qunar.fresh2018.webexam"/>-->
    <context:component-scan base-package="com.qunar.fresh2018">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
</beans>